{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\apps\\\\fresh-farm\\\\frontend\\\\src\\\\pages\\\\FarmSales.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getSubmissions } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FarmSales = () => {\n  _s();\n  const [submissions, setSubmissions] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getSubmissions();\n        setSubmissions(data);\n      } catch (error) {\n        console.error('Failed to fetch submissions');\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submitted Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), submissions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: submissions.map((submission, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", submission.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", submission.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message: \", submission.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(submission.date).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No submissions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(FarmSales, \"NP0/Xu6+60ZCgUylq3bBPAzihe8=\");\n_c = FarmSales;\nexport default FarmSales;\nvar _c;\n$RefreshReg$(_c, \"FarmSales\");","map":{"version":3,"names":["React","useState","useEffect","getSubmissions","jsxDEV","_jsxDEV","FarmSales","_s","submissions","setSubmissions","fetchData","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","submission","index","name","email","message","Date","date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/dell/Documents/apps/fresh-farm/frontend/src/pages/FarmSales.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getSubmissions } from '../services/api';\r\n\r\nconst FarmSales = () => {\r\n    const [submissions, setSubmissions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await getSubmissions();\r\n                setSubmissions(data);\r\n            } catch (error) {\r\n                console.error('Failed to fetch submissions');\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Submitted Information</h2>\r\n            {submissions.length > 0 ? (\r\n                <ul>\r\n                    {submissions.map((submission, index) => (\r\n                        <li key={index}>\r\n                            <p>Name: {submission.name}</p>\r\n                            <p>Email: {submission.email}</p>\r\n                            <p>Message: {submission.message}</p>\r\n                            <p>Date: {new Date(submission.date).toLocaleString()}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No submissions found.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FarmSales;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMR,cAAc,CAAC,CAAC;QACnCM,cAAc,CAACE,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;MAChD;IACJ,CAAC;IACDF,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BV,WAAW,CAACW,MAAM,GAAG,CAAC,gBACnBd,OAAA;MAAAS,QAAA,EACKN,WAAW,CAACY,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBAC/BjB,OAAA;QAAAS,QAAA,gBACIT,OAAA;UAAAS,QAAA,GAAG,QAAM,EAACO,UAAU,CAACE,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9Bb,OAAA;UAAAS,QAAA,GAAG,SAAO,EAACO,UAAU,CAACG,KAAK;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCb,OAAA;UAAAS,QAAA,GAAG,WAAS,EAACO,UAAU,CAACI,OAAO;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCb,OAAA;UAAAS,QAAA,GAAG,QAAM,EAAC,IAAIY,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJpDI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELb,OAAA;MAAAS,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACX,EAAA,CAlCID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}